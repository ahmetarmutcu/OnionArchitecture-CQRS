// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionArchitecture.Persistence.Context;

#nullable disable

namespace OnionArchitecture.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 516, DateTimeKind.Local).AddTicks(3227),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 516, DateTimeKind.Local).AddTicks(3235),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 516, DateTimeKind.Local).AddTicks(3286),
                            Name = "Computers, Garden & Toys"
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 516, DateTimeKind.Local).AddTicks(5911),
                            Name = "Elektrik",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 516, DateTimeKind.Local).AddTicks(5912),
                            Name = "Moda",
                            ParentId = 0,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 516, DateTimeKind.Local).AddTicks(5914),
                            Name = "Bilgisayar",
                            ParentId = 1,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 516, DateTimeKind.Local).AddTicks(5915),
                            Name = "Kadın",
                            ParentId = 2,
                            Priorty = 1
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 518, DateTimeKind.Local).AddTicks(3030),
                            Description = "Doloremque çarpan umut ötekinden nostrum.",
                            Title = "Sokaklarda."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 518, DateTimeKind.Local).AddTicks(3066),
                            Description = "Çıktılar et incidunt aut tempora.",
                            Title = "Karşıdakine domates."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 518, DateTimeKind.Local).AddTicks(3097),
                            Description = "Çünkü reprehenderit perferendis aliquam kulu.",
                            Title = "Quasi."
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 520, DateTimeKind.Local).AddTicks(4897),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Discount = 4.961950698502630m,
                            Price = 691.03m,
                            Title = "Gorgeous Rubber Fish"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreatedDateTime = new DateTime(2024, 2, 20, 15, 45, 21, 520, DateTimeKind.Local).AddTicks(4927),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Discount = 6.556671728501220m,
                            Price = 71.59m,
                            Title = "Small Cotton Chicken"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("OnionArchitecture.Domain.Entites.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnionArchitecture.Domain.Entites.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Detail", b =>
                {
                    b.HasOne("OnionArchitecture.Domain.Entites.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Product", b =>
                {
                    b.HasOne("OnionArchitecture.Domain.Entites.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
