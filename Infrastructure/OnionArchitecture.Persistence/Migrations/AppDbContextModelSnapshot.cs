// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionArchitecture.Persistence.Context;

#nullable disable

namespace OnionArchitecture.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 786, DateTimeKind.Local).AddTicks(613),
                            IsDeleted = false,
                            Name = "Toys & Automotive"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 786, DateTimeKind.Local).AddTicks(620),
                            IsDeleted = false,
                            Name = "Jewelery"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 786, DateTimeKind.Local).AddTicks(635),
                            IsDeleted = true,
                            Name = "Movies & Clothing"
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 786, DateTimeKind.Local).AddTicks(2594),
                            IsDeleted = false,
                            Name = "Elektrik",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 786, DateTimeKind.Local).AddTicks(2596),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 786, DateTimeKind.Local).AddTicks(2598),
                            IsDeleted = false,
                            Name = "Bilgisayar",
                            ParentId = 1,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 786, DateTimeKind.Local).AddTicks(2599),
                            IsDeleted = false,
                            Name = "Kadın",
                            ParentId = 2,
                            Priorty = 1
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 787, DateTimeKind.Local).AddTicks(8715),
                            Description = "Fugit sunt illo sandalye yazın.",
                            IsDeleted = false,
                            Title = "Ducimus."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 787, DateTimeKind.Local).AddTicks(8755),
                            Description = "Doloremque mi veritatis ut camisi.",
                            IsDeleted = true,
                            Title = "Bundan lambadaki."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 787, DateTimeKind.Local).AddTicks(8783),
                            Description = "Vitae sandalye eaque illo için.",
                            IsDeleted = false,
                            Title = "Ipsa."
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 790, DateTimeKind.Local).AddTicks(9545),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Discount = 7.16267932412850m,
                            IsDeleted = true,
                            Price = 552.95m,
                            Title = "Ergonomic Concrete Car"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreatedDateTime = new DateTime(2024, 2, 21, 21, 5, 51, 790, DateTimeKind.Local).AddTicks(9572),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Discount = 5.52580587745620m,
                            IsDeleted = true,
                            Price = 233.44m,
                            Title = "Ergonomic Soft Bacon"
                        });
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Detail", b =>
                {
                    b.HasOne("OnionArchitecture.Domain.Entites.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Product", b =>
                {
                    b.HasOne("OnionArchitecture.Domain.Entites.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.ProductCategory", b =>
                {
                    b.HasOne("OnionArchitecture.Domain.Entites.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnionArchitecture.Domain.Entites.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("OnionArchitecture.Domain.Entites.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
